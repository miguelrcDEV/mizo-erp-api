type Employee {
    id: Int
    name: String
    surname: String
    email: String
    password: String
    language: String
    role: String
    creationDate: String
    active: Boolean
    registered: Boolean
    company: Company
}

input UpdateEmployeeMeInfo {
    name: String!
    surname: String!
    email: String!
    password: String!
    language: String!
    newPassword: String
    newPasswordRepeated: String
}

input EmployeeInput {
    name: String!
    surname: String!
    email: String!
    language: String!
    role: String!
}

input EmployeeInputUpdate {
    id: Int!
    name: String!
    surname: String!
    email: String!
    language: String!
    role: String!
}

type Query {
    me: Employee
    employees: [Employee]
    technicians: [Employee]
}

type Mutation {
    login(email: String!, password: String!): Token
    registerEmployee(newPassword: String!): Token
    updateEmployeeMe(updateInfo: UpdateEmployeeMeInfo): Token
    addEmployee(employee: EmployeeInput!): Employee
    updateEmployee(employee: EmployeeInputUpdate!): Employee
    unsubscribeEmployee(employeeId: Int!): Employee
}