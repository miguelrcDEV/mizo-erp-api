type Company {
    id: Int
    name: String
    tin: String
    country: String
    address: String
    phone: String
    logo: String
    domain: String
    creationDate: String
    active: Boolean
    employees: [Employee]
}

input RegisterInfo {
    name: String!
    surname: String!
    email: String!
    password: String!
    language: String!
    companyName: String!
    phone: String!
    country: String!
    address: String!
}

type Registered {
    company: Company,
    token: String
}

input InputCompany {
    name: String!
    address: String
    tin: String
    phone: String
    country: String
    logo: String
    domain: String
    creationDate: String
}

input UpdateCompanyInfo {
    name: String!
    country: String!
    address: String!
    phone: String!
    logo: String
}

type Query {
    company: Company
    companies: [Company]
}

type Mutation {
    register(registerInfo: RegisterInfo!): Registered
    addCompany(company:InputCompany!): Company
    updateCompany(updateInfo:UpdateCompanyInfo!): Token
}